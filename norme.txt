sources : norme 42, 

Devenir un bon développeur fait parti du BABA du métier de développeur (oui vraiment...). Mais qu'en est-il de se qu'
il faut appliquer afin de l'être ? Je vous parlerai donc dans cette article de la norme et de la connaissance puisque ce sont les seules (ou presque) étapes afin d'être un bon développeur pour vous meme mais aussi pour les autres. 

Voyons en premier temps la norme de code. Tout développeur doit respecter une norme de formatage dans son code afin qu'il soit lisible, que ce soit par les autres mais aussi pour vous meme. Pour le bien de nos yeux, suivez la norme.
Je peux vous redirigez a l'adresse suivante de la norme de l'école 42, bien que très strict, elle permet de mieux se relire et d'avoir un code beau visuellement et structurellement : lien

Voici un code en C, réalise a la norme 42 :

//code

Et voici ce meme code en C, avec une norme autre que celle de 42, mais tout de meme lisible :

//code

Et une version illisible du meme programme :

//code

A noter que tout ces codes fonctionnent, si vous voulez les tester en les compilant libre a vous.

Si vous avez remarque, la fonction que vous avez pu observer ci-dessus, se nomme "atoi", c'est une fonction C qui permet de convertir une chaine de caractère en intager (avec certaines règles), son equivalent en C# est Convert.ToInt32(). 

Passons a la connaissance, afin d'etre qualifier bon developpeur, des connaissances approfondi sur les langages de proogrammation que vous pratiquez est necessaire, connaitre tout une panoplie de langage ne sert pas a grand chose si votre niveau n'est pas avancer dedans, si vous en connaissez parfaitement quelques uns, vous irez surement plus loin.

Cette parti sur la connaissance etant bien courte, passons aux qualities a avoir en tant que developpeur :
-La curiosite
-Un desir de savoir et d'evoluer
-Une communication fluide et une bonne sociabilite
-Savoir travailler en equipe
-Comprendre ce que l'ont fait, bien que ca parait normal, on garde les "developpeurs" qui utilise des ia pour remplacer leur savoir dans un coin de notre tete. Je parle de ceux qui n'apprenent pas mais qui laisse faire une machine tout a sa place.
-Bien connaitre son environnement de travail.

